install.packages("rJava")
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk-10.0.1/")
library(rJava)
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk-12.0.1/")
library(rJava)
if (!require("devtools")) install.packages("devtools")
devtools::install_bitbucket(repo = "bucklerlab/rtassel", ref = "master")
install.packages('devtools',dependencies = T)
library(devtools)
options(devtools.install.args = c("--no-multiarch", "--no-test-load"))
devtools::install_url('https://github.com/catboost/catboost/releases/download/v0.11.1/catboost-R-Windows-0.11.1.tgz', INSTALL_opts = c("--no-multiarch", "--no-test-load"))
install.packages("devtools", dependencies = T)
if (!require("devtools")) install.packages("devtools")
devtools::install_bitbucket(repo = "bucklerlab/rtassel", ref = "master")
library(rTASSEL)
library(rJava)
devtools::install_bitbucket(repo = "bucklerlab/rtassel", ref = "master")
git clone https://bitbucket.org/bucklerlab/rtassel.git
install.packages("rJava")
install.packages("rJava")
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk-11.0.3/")
library(rJAva)
install.packages("rJava")
Sys.setenv(JAVA_HOME="C:/Program Files/Java/jdk-11.0.3/")
library(rJava)
if (!require("devtools")) install.packages("devtools")
devtools::install_bitbucket(repo = "bucklerlab/rtassel", ref = "master")
library(rTASSEL)
devtools::install_bitbucket(repo = "bucklerlab/rtassel", ref = "master")
if (!require("remotes")) install.packages("remotes")
remotes::install_bitbucket(
repo = "bucklerlab/rtassel",
build = TRUE,
build_opts = c("--no-resave-data", "--no-manual")
)
library(rJava)
rJava
1+1
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_bitbucket(repo = "bucklerlab/rtassel", ref = "master")
getwd()
workingDir <- "./Coexpression Network/Medicago-truncatula-salt-rhizobia-coexpression-network/"
setwd(workingDir)
library(WGCNA)
options(stringsAsFactors = FALSE)
unfilteredData <- read.csv("All_Unfiltered_50,443 genes.csv", stringsAsFactors = FALSE) #LiverFemale3600.csv")#  /All_Unfiltered_50,443 genes.csv"
#unfilteredData <- read.table(file = "PRJNA524006.ose2-lmin50-mm2.count.tsv", sep = '\t', header = TRUE)
dim(unfilteredData)
names(unfilteredData)
datExpr0 <- as.data.frame(t(unfilteredData))#[, -c(1)]))
colnames(datExpr0) <- datExpr0[1, ]
#datExpr0 = datExpr0[-1, ] #for rna seq from jeanne, only have 1 of these
datExpr0 = datExpr0[-1, ]
datExpr0[] <- lapply(datExpr0, function(x) as.numeric(as.character(x)))
sampleTree <- hclust(dist(datExpr0), method = "average")
sizeGrWindow(12,9)
par(cex = 0.6);
par(mar = c(0,4,2,0))
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5,
cex.axis = 1.5, cex.main = 2)
# Choose a set of soft-thre   sholding powers
powers <- c(c(1:10), seq(from = 12, to=20, by=2))
# Call the network topology analysis function
sft <- pickSoftThreshold(datExpr0, powerVector = powers, verbose = 5)
# Plot the results:
sizeGrWindow(9, 5)
par(mfrow = c(1,2));
